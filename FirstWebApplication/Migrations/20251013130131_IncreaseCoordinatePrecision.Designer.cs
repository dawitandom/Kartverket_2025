// <auto-generated />
using System;
using FirstWebApplication.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstWebApplication.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20251013130131_IncreaseCoordinatePrecision")]
    partial class IncreaseCoordinatePrecision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FirstWebApplication.Models.ObstacleTypeEntity", b =>
                {
                    b.Property<string>("ObstacleId")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ObstacleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("SortedOrder")
                        .HasColumnType("int");

                    b.HasKey("ObstacleId");

                    b.ToTable("ObstacleTypes");

                    b.HasData(
                        new
                        {
                            ObstacleId = "CRN",
                            ObstacleName = "Crane",
                            SortedOrder = 1
                        },
                        new
                        {
                            ObstacleId = "MST",
                            ObstacleName = "Mast",
                            SortedOrder = 2
                        },
                        new
                        {
                            ObstacleId = "PWR",
                            ObstacleName = "PowerLine",
                            SortedOrder = 3
                        },
                        new
                        {
                            ObstacleId = "TWR",
                            ObstacleName = "Tower",
                            SortedOrder = 4
                        },
                        new
                        {
                            ObstacleId = "BLD",
                            ObstacleName = "Building",
                            SortedOrder = 5
                        },
                        new
                        {
                            ObstacleId = "OTH",
                            ObstacleName = "Other",
                            SortedOrder = 9
                        });
                });

            modelBuilder.Entity("FirstWebApplication.Models.Report", b =>
                {
                    b.Property<string>("ReportId")
                        .HasColumnType("char(10)");

                    b.Property<short?>("AltitudeFeet")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(11,9)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(12,9)");

                    b.Property<string>("ObstacleId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.HasKey("ReportId");

                    b.HasIndex("ObstacleId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FirstWebApplication.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("char(5)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(60)");

                    b.Property<short>("UserRoleId")
                        .HasColumnType("smallint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "USR01",
                            FirstName = "Test",
                            LastName = "User",
                            Mail = "test@example.com",
                            Password = "password123                                             ",
                            UserRoleId = (short)2,
                            Username = "testuser"
                        },
                        new
                        {
                            UserId = "ADM01",
                            FirstName = "Admin",
                            LastName = "User",
                            Mail = "admin@example.com",
                            Password = "admin123                                                ",
                            UserRoleId = (short)1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("FirstWebApplication.Models.UserRole", b =>
                {
                    b.Property<short>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<short>("UserRoleId"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = (short)1,
                            Role = "Admin"
                        },
                        new
                        {
                            UserRoleId = (short)2,
                            Role = "User"
                        });
                });

            modelBuilder.Entity("FirstWebApplication.Models.Report", b =>
                {
                    b.HasOne("FirstWebApplication.Models.ObstacleTypeEntity", "ObstacleType")
                        .WithMany("Reports")
                        .HasForeignKey("ObstacleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstWebApplication.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObstacleType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstWebApplication.Models.User", b =>
                {
                    b.HasOne("FirstWebApplication.Models.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("FirstWebApplication.Models.ObstacleTypeEntity", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("FirstWebApplication.Models.User", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("FirstWebApplication.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
